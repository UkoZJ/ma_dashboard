[params]
# Select evironment: development 'dev' or production 'prod'.
env = dev
# Inform if the query language is in prql dialect or raw sql
is_prql = false

[logging]
uiid = 0

[paths]

# Directories
root = .
raw_data = %(root)s/data/01_raw
intermediate_data = %(root)s/data/02_intermediate
outputs_data = %(root)s/data/03_model_outputs
results = %(root)s/data/04_results

# Files (raw data)
reports = %(raw_data)s/staging/reports.parquet
reports_response = %(raw_data)s/staging/reports_response.parquet
app_users = %(raw_data)s/staging/app_users.parquet
sampling_effort = %(raw_data)s/staging/sampling_effort.parquet

gadm_410 = %(raw_data)s/gadm/gadm_410_transformed.gpkg
munic2comarca = %(raw_data)s/relacion_municipios_comarcas.csv
climate_regions = %(raw_data)s/climate_regions/Beck_KG_V1_present_0p5_without_see.gpkg
climate_regions_legend = %(raw_data)s/climate_regions/Beck_KG_V1_legend.csv
ecoregions = %(raw_data)s/ecoregions/wwf_terr_ecos.gpkg

iqa_scores = %(raw_data)s/iqa_scores.parquet
human_presence_raster = %(raw_data)s/human_presence_multilayer_025.tif

# Files (intermediate data)
gadm_legend = %(intermediate_data)s/gadm_legend.parquet
ecoregions_legend = %(intermediate_data)s/ecoregions_legend.parquet
reports_transf = %(intermediate_data)s/reports.parquet
reports_codes = %(intermediate_data)s/reports_codes.parquet
app_users_transf = %(intermediate_data)s/app_users.parquet
human_presence = %(intermediate_data)s/human_presence.parquet
sampling_effort_transf = %(intermediate_data)s/sampling_effort_transf.parquet
reports_response_transf = %(intermediate_data)s/reports_response_transf.parquet

# Files (model outputs data)
users_quality = %(outputs_data)s/users_quality.parquet
users_ppa = %(outputs_data)s/users_ppa.parquet
users_ppa_quality = %(outputs_data)s/users_ppa_quality.parquet

# Files (logging data)
logs = %(root)s/data/logs/logfile.log

[sql]

reports_response =
    select report_id as version_uuid, answer_id, question_id from tigaserver_app_reportresponse

reports = 
    WITH
    tea AS
        (SELECT report_id AS version_uuid,
                max(last_modified) AS max_last_modified
        FROM tigacrafting_expertreportannotation
        WHERE validation_complete = TRUE
            AND category_id IS NOT NULL
        GROUP BY report_id),
    final AS
        (SELECT 
        mar.version_uuid,
        tar.user_id,
        tar.server_upload_time,
        mar.observation_date,
        tea.max_last_modified,
        mar.lat,
        mar.lon,
        mar.ref_system,
        mar."type" AS report_type,
        mar.simplified_expert_validation_result,
        split_part(mar.expert_validation_result, '#', 2) AS expert_validation_confidence,
        mar.expert_validated,
        mar.n_photos,
        split_part(mar.photo_url, '/', 4) AS best_photo_filename,
        mar.bite_count,
        mar.bite_location,
        mar.bite_time,
        mar.storm_drain_status,
        mar.visible,
        tar.hide
        FROM map_aux_reports_newmap AS mar
        LEFT JOIN tigaserver_app_report AS tar ON mar.version_uuid = tar."version_UUID"
        LEFT JOIN tea USING(version_uuid)
        where 
        ((tar.package_name = 'ceab.movelab.tigatrapp'
            AND tar.package_version > 3) OR (tar.package_name != 'ceab.movelab.tigatrapp'
            AND tar.creation_time >= '2014-06-24'::timestamp))
        AND tar.version_number != -1
        AND tar.note IS DISTINCT FROM '#345'
        AND tar.note IS DISTINCT FROM CONCAT('#345', CHR(10))
        )
    SELECT * FROM final

app_users = 
    select "user_UUID", registration_time, last_score_update, score_v2
    from tigaserver_app_tigauser

sampling_effort = 
    with cte as (
    select
    round(cast(masked_lon as numeric),3)::varchar as lon,
    round(cast(masked_lat as numeric),3)::varchar as lat,
    date_trunc('day', server_upload_time::timestamp) as date_utc,
    count(distinct(user_coverage_uuid))::int as n_participants
    from tigaserver_app_fix taf
    group by lon, lat, date_utc
    order by lon, lat, date_utc
    )
    select concat(lon,'_',lat) as lonlat_id, lon, lat, date_utc, n_participants from cte

